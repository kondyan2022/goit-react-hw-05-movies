{"version":3,"file":"static/js/434.82ed3e6e.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDaetal.styled.js","pages/MovieDetails/MovieDetails.jsx","utils/moviedb-api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const FilmCard = styled.div`\n  display: flex;\n  gap: 20px;\n  margin-top: 15px;\n`;\n\nexport const BackLink = styled(Link)`\n  text-decoration: none;\n  padding: 15px;\n`;\n","import { Suspense, useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMovieDetails } from 'utils/moviedb-api';\nimport image from '../../noposter.png';\nimport { BackLink, FilmCard } from './MovieDaetal.styled';\n\nconst POSTER_IMAGE_PATH = 'https://image.tmdb.org/t/p/w342';\n\nconst MovieDetails = () => {\n  const [title, setTitle] = useState('');\n  const [releaseYear, setReleaseYear] = useState();\n  const [posterImg, setPosterImg] = useState('');\n  const [genres, setGenres] = useState('');\n  const [overview, setOverview] = useState('');\n  const [userScore, setUserScore] = useState();\n\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLocationRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    const getMovie = async id => {\n      try {\n        const {\n          title,\n          poster_path,\n          genres,\n          release_date,\n          overview,\n          vote_average,\n        } = await getMovieDetails(id);\n        setTitle(title);\n        setReleaseYear(release_date.slice(0, 4));\n        setGenres(genres.map(({ name }) => name).join(' '));\n        setOverview(overview);\n        setPosterImg(poster_path ? POSTER_IMAGE_PATH + poster_path : image);\n        setUserScore(Math.round(vote_average * 10));\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getMovie(movieId);\n  }, [movieId]);\n\n  return (\n    <>\n      <BackLink to={backLocationRef.current}> Go back</BackLink>\n      <FilmCard>\n        <img src={posterImg} alt={title} width=\"342\" />\n        <div>\n          <h2>\n            {title} ({releaseYear})\n          </h2>\n          <p>User Score: {userScore}%</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h4>Genres</h4>\n\n          <p>{genres}</p>\n        </div>\n      </FilmCard>\n      <ul>\n        <li>\n          <Link to=\"cast\">cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">reviews</Link>\n        </li>\n      </ul>\n      <Suspense fallback={<div>Loading sub...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\nconst API_KEY = '65004062449cedf299d488ba09607cf0';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.headers.common['accept'] = 'application/json';\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en-US',\n};\n\nexport const getTrending = async () => {\n  const { data } = await axios.get(`trending/movie/week`);\n  return data;\n};\n\nexport const getCasts = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}/credits`);\n  return data;\n};\n\nexport const getReviews = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}/reviews`);\n  return data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}`);\n  return data;\n};\n\nexport const getSearchMovies = async query => {\n  const { data } = await axios.get('search/movie', {\n    params: {\n      query: query,\n      include_adult: true,\n      language: 'en-US',\n      page: 1,\n      region: 'US',\n    },\n  });\n  return data;\n};\n"],"names":["FilmCard","styled","BackLink","Link","useState","title","setTitle","releaseYear","setReleaseYear","posterImg","setPosterImg","genres","setGenres","overview","setOverview","userScore","setUserScore","movieId","useParams","location","useLocation","backLocationRef","useRef","state","from","useEffect","getMovie","id","getMovieDetails","poster_path","release_date","vote_average","slice","map","name","join","Math","round","console","log","to","current","src","alt","width","Suspense","fallback","axios","api_key","language","getTrending","data","getCasts","getReviews","getSearchMovies","query","params","include_adult","page","region"],"sourceRoot":""}