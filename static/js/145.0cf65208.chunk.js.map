{"version":3,"file":"static/js/145.0cf65208.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.style.js","components/MovieList/MovieList.jsx","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.jsx","utils/moviedb-api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieLink = styled(Link)`\n  color: blue;\n  &:visited {\n    color: blue;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport { MovieLink } from './MovieList.style';\n\nconst MovieList = ({ movies, path = '' }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(({ id, title }) => {\n        return (\n          <li key={id}>\n            <MovieLink to={`${path + id}`} state={{ from: location }}>\n              {title}\n            </MovieLink>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\nexport default MovieList;\n","import { useEffect, useState } from 'react';\n\nconst SearchForm = ({ onSubmit, queryString }) => {\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    setQuery(queryString);\n  }, [queryString]);\n\n  const handleChange = event => {\n    setQuery(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit({ query: query });\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        name=\"query\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n        value={query}\n        onChange={handleChange}\n      />\n      <button type=\"submit\">search</button>\n    </form>\n  );\n};\n\nexport default SearchForm;\n","import { useEffect, useState } from 'react';\nimport { getSearchMovies } from 'utils/moviedb-api';\nimport { useSearchParams } from 'react-router-dom';\nimport MovieList from 'components/MovieList/MovieList';\nimport SearchForm from 'components/SearchForm/SearchForm';\n\nconst Movies = () => {\n  const [movieList, setMovieList] = useState([]);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    const getSearchMoviesList = async query => {\n      try {\n        const { results } = await getSearchMovies(query);\n        setMovieList(results.map(({ id, title }) => ({ id, title })));\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    if (query === '') {\n      setMovieList([]);\n      return;\n    }\n    getSearchMoviesList(query);\n  }, [query]);\n\n  const handleSubmit = values => {\n    if (query !== values.query) {\n      setSearchParams(values.query === '' ? {} : { query: values.query });\n    }\n  };\n\n  return (\n    <>\n      <SearchForm onSubmit={handleSubmit} queryString={query} />\n      <MovieList movies={movieList} />\n      {query && movieList.length === 0 && <div>No matches. Try again.</div>}\n      {!query && <div>Please, input key words for search.</div>}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\nconst API_KEY = '65004062449cedf299d488ba09607cf0';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.headers.common['accept'] = 'application/json';\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en-US',\n};\n\nexport const getTrending = async () => {\n  const { data } = await axios.get(`trending/movie/week`);\n  return data;\n};\n\nexport const getCasts = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}/credits`);\n  return data;\n};\n\nexport const getReviews = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}/reviews`);\n  return data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}`);\n  return data;\n};\n\nexport const getSearchMovies = async query => {\n  const { data } = await axios.get('search/movie', {\n    params: {\n      query: query,\n      include_adult: true,\n      language: 'en-US',\n      page: 1,\n      region: 'US',\n    },\n  });\n  return data;\n};\n"],"names":["MovieLink","styled","Link","movies","path","location","useLocation","map","id","title","to","state","from","onSubmit","queryString","useState","query","setQuery","useEffect","event","preventDefault","type","name","autoComplete","autoFocus","placeholder","value","onChange","target","movieList","setMovieList","useSearchParams","searchParams","setSearchParams","get","getSearchMoviesList","getSearchMovies","results","console","log","values","MovieList","length","axios","api_key","language","getTrending","data","getCasts","movieId","getReviews","getMovieDetails","params","include_adult","page","region"],"sourceRoot":""}