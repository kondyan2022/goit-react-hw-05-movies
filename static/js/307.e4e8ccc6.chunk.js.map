{"version":3,"file":"static/js/307.e4e8ccc6.chunk.js","mappings":"sOAgBA,EAZiB,SAAC,GAA0C,EAAxCA,GAAyC,IAArCC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aACjCC,EAAYD,EAHO,kCAG6BA,E,81RAEtD,OACE,2BACE,gBAAKE,IAAKD,EAAWE,IAAKL,EAAMM,MAAM,SACtC,uBAAIN,KACJ,yBAAG,cAAYC,OAGpB,E,oCCZYM,E,OAAWC,GAAAA,GAAH,6JCwCrB,EApCa,WACX,OAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAoBR,OAlBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,WAAMhB,GAAN,mGAEOiB,EAAAA,EAAAA,IAASjB,GAFhB,gBAERkB,EAFQ,EAERA,KACRN,EACEM,EAAKC,KAAI,kBAA4C,CACnDnB,GADO,EAAGA,GAEVC,KAFO,EAAOA,KAGdC,UAHO,EAAaA,UAIpBC,aAJO,EAAwBA,aAAxB,KAJK,gDAYhBiB,QAAQC,IAAR,MAZgB,yDAAH,sDAejBL,EAAYH,EACb,GAAE,CAACA,KAEF,SAACL,EAAD,UACGG,EAASQ,KAAI,gBAAGnB,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,OACZ,SAAC,EAAD,CAEEF,KAAMA,EACNC,UAAWA,EACXC,aAAcA,GAHTH,EAFK,KAUnB,C,+LCrCDsB,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,OAA0C,mBAC1CA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QALc,mCAMdC,SAAU,SAGL,IAAMC,EAAW,mCAAG,sGACFH,EAAAA,EAAAA,IAAA,uBADE,uBACjBI,EADiB,EACjBA,KADiB,kBAElBA,GAFkB,2CAAH,qDAKXT,EAAQ,mCAAG,WAAMJ,GAAN,yFACCS,EAAAA,EAAAA,IAAA,gBAAmBT,EAAnB,aADD,uBACda,EADc,EACdA,KADc,kBAEfA,GAFe,2CAAH,sDAKRC,EAAU,mCAAG,WAAMd,GAAN,yFACDS,EAAAA,EAAAA,IAAA,gBAAmBT,EAAnB,aADC,uBAChBa,EADgB,EAChBA,KADgB,kBAEjBA,GAFiB,2CAAH,sDAKVE,EAAe,mCAAG,WAAMf,GAAN,yFACNS,EAAAA,EAAAA,IAAA,gBAAmBT,IADb,uBACrBa,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfG,EAAe,mCAAG,WAAMC,GAAN,yFACNR,EAAAA,EAAAA,IAAU,eAAgB,CAC/CS,OAAQ,CACND,MAAOA,EACPE,eAAe,EACfR,SAAU,QACVS,KAAM,EACNC,OAAQ,QAPiB,uBACrBR,EADqB,EACrBA,KADqB,kBAUtBA,GAVsB,2CAAH,qD","sources":["components/CastItem/CastItem.jsx","components/Cast/Cast.styled.js","components/Cast/Cast.jsx","utils/moviedb-api.js"],"sourcesContent":["import image from '../../nophoto.jpg';\n\nconst PROFILE_IMAGE_PATH = 'https://image.tmdb.org/t/p/w185';\n\nconst CastItem = ({ id, name, character, profile_path }) => {\n  const imagePath = profile_path ? PROFILE_IMAGE_PATH + profile_path : image;\n\n  return (\n    <li>\n      <img src={imagePath} alt={name} width=\"185\" />\n      <p>{name}</p>\n      <p>Character: {character}</p>\n    </li>\n  );\n};\n\nexport default CastItem;\n","import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: flex;\n  justify-content: flex-start;\n  align-items: flex-start;\n  gap: 10px;\n  flex-wrap: wrap;\n  list-style: none;\n`;\n","import CastItem from 'components/CastItem/CastItem';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCasts } from 'utils/moviedb-api';\nimport { CastList } from './Cast.styled';\n\nconst Cast = () => {\n  const [castList, setCastList] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getCastList = async id => {\n      try {\n        const { cast } = await getCasts(id);\n        setCastList(\n          cast.map(({ id, name, character, profile_path }) => ({\n            id,\n            name,\n            character,\n            profile_path,\n          }))\n        );\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getCastList(movieId);\n  }, [movieId]);\n  return (\n    <CastList>\n      {castList.map(({ id, name, character, profile_path }) => (\n        <CastItem\n          key={id}\n          name={name}\n          character={character}\n          profile_path={profile_path}\n        />\n      ))}\n    </CastList>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\nconst API_KEY = '65004062449cedf299d488ba09607cf0';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.headers.common['accept'] = 'application/json';\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en-US',\n};\n\nexport const getTrending = async () => {\n  const { data } = await axios.get(`trending/movie/week`);\n  return data;\n};\n\nexport const getCasts = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}/credits`);\n  return data;\n};\n\nexport const getReviews = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}/reviews`);\n  return data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}`);\n  return data;\n};\n\nexport const getSearchMovies = async query => {\n  const { data } = await axios.get('search/movie', {\n    params: {\n      query: query,\n      include_adult: true,\n      language: 'en-US',\n      page: 1,\n      region: 'US',\n    },\n  });\n  return data;\n};\n"],"names":["id","name","character","profile_path","imagePath","src","alt","width","CastList","styled","useState","castList","setCastList","movieId","useParams","useEffect","getCastList","getCasts","cast","map","console","log","axios","api_key","language","getTrending","data","getReviews","getMovieDetails","getSearchMovies","query","params","include_adult","page","region"],"sourceRoot":""}