{"version":3,"file":"static/js/544.89f80f53.chunk.js","mappings":"sMAGaA,GAAYC,E,OAAAA,IAAOC,EAAAA,GAAPD,CAAH,8E,SCgBtB,EAhBkB,SAAC,GAA2B,IAAzBE,EAAwB,EAAxBA,OAAwB,IAAhBC,KAAAA,OAAgB,MAAT,GAAS,EACrCC,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACGH,EAAOI,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACjB,OACE,yBACE,SAACT,EAAD,CAAWU,GAAE,UAAKN,EAAOI,GAAMG,MAAO,CAAEC,KAAMP,GAA9C,SACGI,KAFID,EAMZ,KAGN,C,yGCSD,UAvBa,WACX,OAAwCK,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,gHAEIC,EAAAA,EAAAA,MAFJ,gBAEdC,EAFc,EAEdA,QACRJ,EAAgBI,EAAQZ,KAAI,kBAAoB,CAAEC,GAAtB,EAAGA,GAAuBC,MAA1B,EAAOA,MAAP,KAHN,gDAKtBW,QAAQC,IAAR,MALsB,yDAAH,qDAQvBJ,GACD,GAAE,KAGD,iCACE,wBAAI,uBACJ,SAAC,IAAD,CAAWd,OAAQW,EAAcV,KAAM,eAG5C,C,+LCtBDkB,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,OAA0C,mBAC1CA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QALc,mCAMdC,SAAU,SAGL,IAAMN,EAAW,mCAAG,sGACFI,EAAAA,EAAAA,IAAA,uBADE,uBACjBG,EADiB,EACjBA,KADiB,kBAElBA,GAFkB,2CAAH,qDAKXC,EAAQ,mCAAG,WAAMC,GAAN,yFACCL,EAAAA,EAAAA,IAAA,gBAAmBK,EAAnB,aADD,uBACdF,EADc,EACdA,KADc,kBAEfA,GAFe,2CAAH,sDAKRG,EAAU,mCAAG,WAAMD,GAAN,yFACDL,EAAAA,EAAAA,IAAA,gBAAmBK,EAAnB,aADC,uBAChBF,EADgB,EAChBA,KADgB,kBAEjBA,GAFiB,2CAAH,sDAKVI,EAAe,mCAAG,WAAMF,GAAN,yFACNL,EAAAA,EAAAA,IAAA,gBAAmBK,IADb,uBACrBF,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfK,EAAe,mCAAG,WAAMC,GAAN,yFACNT,EAAAA,EAAAA,IAAU,eAAgB,CAC/CU,OAAQ,CACND,MAAOA,EACPE,eAAe,EACfT,SAAU,QACVU,KAAM,EACNC,OAAQ,QAPiB,uBACrBV,EADqB,EACrBA,KADqB,kBAUtBA,GAVsB,2CAAH,qD","sources":["components/MovieList/MovieList.style.js","components/MovieList/MovieList.jsx","pages/Home/Home.jsx","utils/moviedb-api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieLink = styled(Link)`\n  color: blue;\n  &:visited {\n    color: blue;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport { MovieLink } from './MovieList.style';\n\nconst MovieList = ({ movies, path = '' }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(({ id, title }) => {\n        return (\n          <li key={id}>\n            <MovieLink to={`${path + id}`} state={{ from: location }}>\n              {title}\n            </MovieLink>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\nexport default MovieList;\n","import MovieList from 'components/MovieList/MovieList';\nimport { useEffect, useState } from 'react';\nimport { getTrending } from 'utils/moviedb-api';\n\nconst Home = () => {\n  const [trendingList, setTrendingList] = useState([]);\n\n  useEffect(() => {\n    const getTrendingMovies = async () => {\n      try {\n        const { results } = await getTrending();\n        setTrendingList(results.map(({ id, title }) => ({ id, title })));\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getTrendingMovies();\n  }, []);\n\n  return (\n    <>\n      <h1> Trending movies </h1>\n      <MovieList movies={trendingList} path={'/movies/'} />\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\nconst API_KEY = '65004062449cedf299d488ba09607cf0';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.headers.common['accept'] = 'application/json';\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en-US',\n};\n\nexport const getTrending = async () => {\n  const { data } = await axios.get(`trending/movie/week`);\n  return data;\n};\n\nexport const getCasts = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}/credits`);\n  return data;\n};\n\nexport const getReviews = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}/reviews`);\n  return data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}`);\n  return data;\n};\n\nexport const getSearchMovies = async query => {\n  const { data } = await axios.get('search/movie', {\n    params: {\n      query: query,\n      include_adult: true,\n      language: 'en-US',\n      page: 1,\n      region: 'US',\n    },\n  });\n  return data;\n};\n"],"names":["MovieLink","styled","Link","movies","path","location","useLocation","map","id","title","to","state","from","useState","trendingList","setTrendingList","useEffect","getTrendingMovies","getTrending","results","console","log","axios","api_key","language","data","getCasts","movieId","getReviews","getMovieDetails","getSearchMovies","query","params","include_adult","page","region"],"sourceRoot":""}